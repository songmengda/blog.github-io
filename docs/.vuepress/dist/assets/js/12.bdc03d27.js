(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{200:function(t,a,e){"use strict";e.r(a);var s=e(0),r=Object(s.a)({},function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"set和map"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#set和map","aria-hidden":"true"}},[t._v("#")]),t._v(" Set和Map")]),t._v(" "),e("h2",{attrs:{id:"set"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#set","aria-hidden":"true"}},[t._v("#")]),t._v(" Set")]),t._v(" "),e("h3",{attrs:{id:"基本用法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基本用法","aria-hidden":"true"}},[t._v("#")]),t._v(" 基本用法")]),t._v(" "),e("p",[t._v("Set本身是一个构造函数，用来生成 Set 数据结构。")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" s "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" s"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" s"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2 3 5 4")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过add()方法向 Set 结构加入成员")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[t._v("所以Set可以用来数组去重")]),t._v(" "),e("h3",{attrs:{id:"set实例的属性和方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#set实例的属性和方法","aria-hidden":"true"}},[t._v("#")]),t._v(" Set实例的属性和方法")]),t._v(" "),e("p",[t._v("Set 结构的实例有以下属性。")]),t._v(" "),e("ul",[e("li",[t._v("Set.prototype.constructor：构造函数，默认就是Set函数。")]),t._v(" "),e("li",[t._v("Set.prototype.size：返回Set实例的成员总数。")])]),t._v(" "),e("p",[t._v("Set 实例的方法分为两大类：操作方法（用于操作数据）和遍历方法（用于遍历成员）。下面先介绍四个操作方法。")]),t._v(" "),e("ul",[e("li",[t._v("Set.prototype.add(value)：添加某个值，返回 Set 结构本身。")]),t._v(" "),e("li",[t._v("Set.prototype.delete(value)：删除某个值，返回一个布尔值，表示删除是否成功。")]),t._v(" "),e("li",[t._v("Set.prototype.has(value)：返回一个布尔值，表示该值是否为Set的成员。")]),t._v(" "),e("li",[t._v("Set.prototype.clear()：清除所有成员，没有返回值。")])]),t._v(" "),e("h2",{attrs:{id:"weakset"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#weakset","aria-hidden":"true"}},[t._v("#")]),t._v(" WeakSet")]),t._v(" "),e("h3",{attrs:{id:"语法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#语法","aria-hidden":"true"}},[t._v("#")]),t._v(" 语法")]),t._v(" "),e("p",[t._v("WeakSet 是一个构造函数，可以使用new命令，创建 WeakSet 数据结构。 可以接受一个数组或类似数组的对象作为参数。")]),t._v(" "),e("p",[t._v("WeakSet 结构有以下三个方法。")]),t._v(" "),e("ul",[e("li",[t._v("WeakSet.prototype.add(value)：向 WeakSet 实例添加一个新成员。")]),t._v(" "),e("li",[t._v("WeakSet.prototype.delete(value)：清除 WeakSet 实例的指定成员。")]),t._v(" "),e("li",[t._v("WeakSet.prototype.has(value)：返回一个布尔值，表示某个值是否在 WeakSet 实例之中。")])]),t._v(" "),e("p",[t._v("WeakSet 的一个用处，是储存 DOM 节点，而不用担心这些节点从文档移除时，会引发内存泄漏。")]),t._v(" "),e("h2",{attrs:{id:"map"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#map","aria-hidden":"true"}},[t._v("#")]),t._v(" Map")]),t._v(" "),e("h3",{attrs:{id:"基本用法-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基本用法-2","aria-hidden":"true"}},[t._v("#")]),t._v(" 基本用法")]),t._v(" "),e("p",[t._v("为了解决JavaScript 的对象（Object）只能用字符串当作键这个问题,ES6 提供了 Map 数据结构。它类似于对象，也是键值对的集合，但是“键”的范围不限于字符串，各种类型的值（包括对象）都可以当作键。")]),t._v(" "),e("h3",{attrs:{id:"操作方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#操作方法","aria-hidden":"true"}},[t._v("#")]),t._v(" 操作方法")]),t._v(" "),e("p",[e("strong",[t._v("(1)size 属性")])]),t._v(" "),e("p",[t._v("size属性返回 Map 结构的成员总数。")]),t._v(" "),e("p",[e("strong",[t._v("(2)Map.prototype.set(key, value)")])]),t._v(" "),e("p",[t._v("set方法设置键名key对应的键值为value，然后返回整个 Map 结构。如果key已经有值，则键值会被更新，否则就新生成该键。")]),t._v(" "),e("p",[e("strong",[t._v("(3)Map.prototype.get(key)")])]),t._v(" "),e("p",[t._v("get方法读取key对应的键值，如果找不到key，返回undefined。")]),t._v(" "),e("p",[e("strong",[t._v("(4)Map.prototype.has(key)")])]),t._v(" "),e("p",[t._v("has方法返回一个布尔值，表示某个键是否在当前 Map 对象之中。")]),t._v(" "),e("p",[e("strong",[t._v("(5)Map.prototype.delete(key)")])]),t._v(" "),e("p",[t._v("delete方法删除某个键，返回true。如果删除失败，返回false。")]),t._v(" "),e("p",[e("strong",[t._v("(6)Map.prototype.clear()")])]),t._v(" "),e("p",[t._v("clear方法清除所有成员，没有返回值。")]),t._v(" "),e("h2",{attrs:{id:"weakmap"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#weakmap","aria-hidden":"true"}},[t._v("#")]),t._v(" WeakMap")]),t._v(" "),e("h3",{attrs:{id:"介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#介绍","aria-hidden":"true"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),e("p",[t._v("WeakMap结构与Map结构类似，也是用于生成键值对的集合。")]),t._v(" "),e("p",[t._v("WeakMap与Map的区别有两点。")]),t._v(" "),e("ul",[e("li",[t._v("WeakMap只接受对象作为键名（null除外），不接受其他类型的值作为键名。")]),t._v(" "),e("li",[t._v("WeakMap的键名所指向的对象，不计入垃圾回收机制。")])])])},[],!1,null,null,null);a.default=r.exports}}]);